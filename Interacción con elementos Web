import {test} from 'playwright/test'

test.describe('Acciones en el Automation Sandbox', () => {
    test('Click en el Botón ID Dinámico', async ({page}) => {
        await test.step('Navego al Sandbox de Free Range Testers', async() => {
            await page.goto('https://thefreerangetester.github.io/sandbox-automation-testing/')
        })

        await test.step('Hacer click en el botón con ID dinámico', async() => {
            const botonIDDinamico = page.getByRole('button', { name: 'Hacé click para generar un ID' });
            await botonIDDinamico.click();
            /*await botonIDDinamico.click({force:true}); //force: true funciona para forzar el click, no es obligatorio
            await botonIDDinamico.dblclick() //doble click
            await botonIDDinamico.click({button: 'right'}); // click derecho
            await botonIDDinamico.click({modifiers: ['Shift']}); // hace click mantiendo el shift 
            await botonIDDinamico.hover(); */
        })
    })

    //Solo se puede llenar texto en elementos que lo permiten: Input, textArea y contentEditable
    test('Lleno un campo de texto en Automation Sandbox', async ({ page }) => {
        await test.step('Navego al Sandbox de Free Range Testers', async() => {
            await page.goto('https://thefreerangetester.github.io/sandbox-automation-testing/')
        })

        await test.step('Ingreso texto en el campo Un Aburrido Texto', async () => {
            await page.getByRole('textbox', { name: 'Un aburrido texto' }).fill("Estoy aprendiendo Playwright")
            //await page.getByRole('textbox', { name: 'Un aburrido texto' }).type("Estoy aprendiendo Playwright") el type simula el tecleo
            //await page.getByRole('textbox', { name: 'Un aburrido texto' }).press("Shift+ArrowLeft")
        })

    })

    test('Puedo seleccionar CheckBox', async ({ page }) => {
        await test.step('Navego al Sandbox de Free Range Testers', async() => {
            await page.goto('https://thefreerangetester.github.io/sandbox-automation-testing/')
        })
        
        await test.step('Puedo seleccionar el CheckBox para Pasta', async () => {
            await page.getByRole('checkbox', { name: 'Pasta 🍝' }).check();
            await page.getByRole('checkbox', { name: 'Pasta 🍝' }).uncheck();
        })
        
    })

    test('Puedo seleccionar Radio Buttons', async ({ page }) => {
        await test.step('Navego al Sandbox de Free Range Testers', async() => {
            await page.goto('https://thefreerangetester.github.io/sandbox-automation-testing/')
        })

        await test.step('Puedo seleccionar el radio Button para No', async () => {
            await page.getByRole('radio', { name: 'No' }).check();
            await page.getByRole('checkbox', { name: 'Pasta 🍝' }).uncheck(); //No se puede hacer uncheck en un radio button
        })
        
    })
    
    test('Puedo seleccionar un item del Dropdown', async ({ page }) => {
        await test.step('Navego al Sandbox de Free Range Testers', async() => {
            await page.goto('https://thefreerangetester.github.io/sandbox-automation-testing/')
        })

        await test.step('Puedo seleccionar un deporte del dropdown', async () => {
            await page.getByLabel('Dropdown').selectOption('Fútbol');
        })
    })

    test('Puedo seleccionar un item del segundo Dropdown', async ({ page }) => {
        await test.step('Navego al Sandbox de Free Range Testers', async() => {
            await page.goto('https://thefreerangetester.github.io/sandbox-automation-testing/');
        })

        await test.step('Selecciono un día de la semana', async () => {
            await page.getByRole('button', { name: 'Día de la semana' }).click();
            await page.getByRole('link', { name: 'Martes' }).click();
            await page.getByRole('link', { name: 'Martes' }).click();
        })
        
    })
    
    test('Puedo subir archivos a Automation Sandbox', async ({ page }) => {
        await test.step('Navego al Sandbox de Free Range Testers', async() => {
            await page.goto('https://thefreerangetester.github.io/sandbox-automation-testing/');
        })
        
        await test.step('', async () => {
            await page.getByLabel('Upload file').setInputFiles(['pathAlArchivo.pdf', 'archivoDos.pdf'])
            await page.getByLabel('Upload file').setInputFiles([]) // remover archivos
        })
    })

    test('Puedo hacer un Drag and Drop de elementos en Automation Sandbox', async ({ page }) => {
        await test.step('Navego al Sandbox de Free Range Testers', async() => {
            await page.goto('https://thefreerangetester.github.io/sandbox-automation-testing/');
        })

        await test.step('Hago un Drag and Drop correctamente', async () => {
            await page.getByTestId('DragFrom').dragTo(page.getByTestId('DragTo'))
        })
        
    })
    
})
